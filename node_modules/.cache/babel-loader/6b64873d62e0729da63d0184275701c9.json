{"ast":null,"code":"var _jsxFileName = \"/Users/chughe88/Desktop/01-starting-setup/src/components/UI/CardGroup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from './Button/Button';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardGroup() {\n  _s();\n\n  const [showDiv, setShowDiv] = useState({\n    words: [{\n      question: 'Are',\n      answer: '1',\n      prevState: false\n    }, {\n      question: 'we',\n      answer: '2',\n      prevState: false\n    }, {\n      question: 'There',\n      answer: '3',\n      prevState: false\n    }, {\n      question: 'yet',\n      answer: '4',\n      prevState: false\n    }]\n  });\n\n  const toggleAnswer = question => {\n    console.log(question); //const newShowDiv = [...showDiv];\n    //newShowDiv[index].prevState = !newShowDiv[index].prevState\n    //setShowDiv(prevState => !prevState)\n\n    let newWords = showDiv.words.map(word => {\n      if (word.question === question) {\n        return { ...word,\n          prevState: !word.prevState\n        };\n      }\n\n      return word;\n    });\n    setShowDiv({\n      words: newWords\n    });\n  }; //   const toggleAnswer = e => {\n  //     const { value } = e.target;\n  //     setShowDiv(prevState => ({\n  //         ...prevState,\n  //         value \n  //     }));\n  // };\n\n\n  const words = [{\n    question: 'Are',\n    answer: '1',\n    prevState: false //toggleCard = ()=> setShowDiv(prevState => !prevState)\n    //toggleCard: () => setShowDiv(prevState => !prevState)\n\n  }, {\n    question: 'we',\n    answer: '2',\n    prevState: false\n  }, {\n    question: 'There',\n    answer: '3',\n    prevState: false\n  }, {\n    question: 'yet',\n    answer: '4',\n    prevState: false\n  }];\n  const cardWordGroup = words.map(word => {\n    //let rObj = {}\n    //rObj[word.question] = word.answer\n    //   return ( \n    //       <div>\n    //         <h1>{word.question}</h1>\n    //         <p>{word.answer}</p>\n    //       </div>\n    //   );\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        onClick: toggleAnswer,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: word.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 10\n        }, this)\n      }, word.question, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 8\n      }, this), showDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Conditionally render div here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 12\n        }, this), word.answer]\n      }, word.answer, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, words.indexOf(word), true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this);\n  } // <h1> word.question </h1>\n  // {showDiv && \n  // <div className=\"app\">\n  //     <p>Conditionally render div here</p>\n  //     {word.answer}\n  // </div>}\n  // <Button onClick={toggleAnswer} >{ !showDiv ? 'Show Answer' : 'Hide Answer' }</Button>\n  );\n  return (\n    /*#__PURE__*/\n    // <>\n    //   <div className=\"app\">\n    //     <h1>Hi there!</h1>\n    //   </div>\n    //   {showDiv && \n    //     <div className=\"app\">\n    //       <p>Conditionally render div here</p>\n    //     </div>}\n    //   <Button onClick={toggleAnswer} >{ !showDiv ? 'Show Answer' : 'Hide Answer' }</Button>\n    // </>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: cardWordGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleAnswer,\n        children: !showDiv ? 'Show Answer' : 'Hide Answer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(CardGroup, \"FyHQy2AdUwtjt5y/xuqat269x64=\");\n\n_c = CardGroup;\nexport default CardGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardGroup\");","map":{"version":3,"sources":["/Users/chughe88/Desktop/01-starting-setup/src/components/UI/CardGroup.js"],"names":["React","useState","Button","CardGroup","showDiv","setShowDiv","words","question","answer","prevState","toggleAnswer","console","log","newWords","map","word","cardWordGroup","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAO,eAAP;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC;AACnCK,IAAAA,KAAK,EACL,CACE;AACIC,MAAAA,QAAQ,EAAE,KADd;AAEIC,MAAAA,MAAM,EAAE,GAFZ;AAGIC,MAAAA,SAAS,EAAE;AAHf,KADF,EAME;AACIF,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,MAAM,EAAE,GAFZ;AAGIC,MAAAA,SAAS,EAAE;AAHf,KANF,EAWE;AACIF,MAAAA,QAAQ,EAAE,OADd;AAEIC,MAAAA,MAAM,EAAE,GAFZ;AAGIC,MAAAA,SAAS,EAAE;AAHf,KAXF,EAgBE;AACIF,MAAAA,QAAQ,EAAE,KADd;AAEIC,MAAAA,MAAM,EAAE,GAFZ;AAGIC,MAAAA,SAAS,EAAE;AAHf,KAhBF;AAFmC,GAAD,CAAtC;;AA0BA,QAAMC,YAAY,GAAIH,QAAD,IAAc;AAC/BI,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAD+B,CAE/B;AACA;AACA;;AACF,QAAIM,QAAQ,GAAGT,OAAO,CAACE,KAAR,CAAcQ,GAAd,CAAkBC,IAAI,IAAI;AACrC,UAAIA,IAAI,CAACR,QAAL,KAAkBA,QAAtB,EAAgC;AAC5B,eAAO,EAAC,GAAGQ,IAAJ;AAAUN,UAAAA,SAAS,EAAE,CAACM,IAAI,CAACN;AAA3B,SAAP;AACH;;AACD,aAAOM,IAAP;AACH,KALc,CAAf;AAMAV,IAAAA,UAAU,CAAC;AAACC,MAAAA,KAAK,EAAEO;AAAR,KAAD,CAAV;AACD,GAZD,CA3BmB,CAyCrB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGE,QAAMP,KAAK,GAAG,CACV;AACEC,IAAAA,QAAQ,EAAE,KADZ;AAEEC,IAAAA,MAAM,EAAE,GAFV;AAGEC,IAAAA,SAAS,EAAE,KAHb,CAIE;AACA;;AALF,GADU,EAQV;AACEF,IAAAA,QAAQ,EAAE,IADZ;AAEEC,IAAAA,MAAM,EAAE,GAFV;AAGEC,IAAAA,SAAS,EAAE;AAHb,GARU,EAaV;AACEF,IAAAA,QAAQ,EAAE,OADZ;AAEEC,IAAAA,MAAM,EAAE,GAFV;AAGEC,IAAAA,SAAS,EAAE;AAHb,GAbU,EAkBV;AACEF,IAAAA,QAAQ,EAAE,KADZ;AAEEC,IAAAA,MAAM,EAAE,GAFV;AAGEC,IAAAA,SAAS,EAAE;AAHb,GAlBU,CAAd;AAyBA,QAAMO,aAAa,GAAGV,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAU;AACtC;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA,wBAEA;AAAA,8BACG;AAAK,QAAA,SAAS,EAAC,KAAf;AAAyC,QAAA,OAAO,EAAGL,YAAnD;AAAA,+BACE;AAAA,oBAAKK,IAAI,CAACR;AAAV;AAAA;AAAA;AAAA;AAAA;AADF,SAA0BQ,IAAI,CAACR,QAA/B;AAAA;AAAA;AAAA;AAAA,cADH,EAIKH,OAAO,iBACR;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,EAEIW,IAAI,CAACP,MAFT;AAAA,SAA0BO,IAAI,CAACP,MAA/B;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA,OAAUF,KAAK,CAACW,OAAN,CAAcF,IAAd,CAAV;AAAA;AAAA;AAAA;AAAA,YAFA;AAeD,GAxBqB,CA2BnB;AAEG;AACA;AACA;AACA;AACA;AACA;AAlCgB,GAAtB;AAsCA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,8BACC;AAAA,kBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEN,YAAjB;AAAA,kBAAiC,CAACN,OAAD,GAAW,aAAX,GAA2B;AAA5D;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAXF;AAgBD;;GAjIQD,S;;KAAAA,S;AAmIT,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport Button from './Button/Button';\n\nimport '../../App.css';\n\nfunction CardGroup() {\n  const [showDiv, setShowDiv] = useState({\n      words:\n      [\n        {\n            question: 'Are',\n            answer: '1',\n            prevState: false,\n        },\n        {\n            question: 'we',\n            answer: '2',\n            prevState: false\n        },\n        {\n            question: 'There',\n            answer: '3',\n            prevState: false\n        },\n        {\n            question: 'yet',\n            answer: '4',\n            prevState: false\n        }\n      ]\n  });\n\n  const toggleAnswer = (question) => {\n      console.log(question)\n      //const newShowDiv = [...showDiv];\n      //newShowDiv[index].prevState = !newShowDiv[index].prevState\n      //setShowDiv(prevState => !prevState)\n    let newWords = showDiv.words.map(word => {\n        if (word.question === question) {\n            return {...word, prevState: !word.prevState}\n        }\n        return word;\n    }) \n    setShowDiv({words: newWords})\n  }\n\n//   const toggleAnswer = e => {\n//     const { value } = e.target;\n//     setShowDiv(prevState => ({\n//         ...prevState,\n//         value \n//     }));\n// };\n  \n\n  const words = [\n      {\n        question: 'Are',\n        answer: '1',\n        prevState: false,\n        //toggleCard = ()=> setShowDiv(prevState => !prevState)\n        //toggleCard: () => setShowDiv(prevState => !prevState)\n      },\n      {\n        question: 'we',\n        answer: '2',\n        prevState: false\n      },\n      {\n        question: 'There',\n        answer: '3',\n        prevState: false\n      },\n      {\n        question: 'yet',\n        answer: '4',\n        prevState: false\n      }\n  ]\n\n  const cardWordGroup = words.map((word) => {\n      //let rObj = {}\n      //rObj[word.question] = word.answer\n    //   return ( \n    //       <div>\n    //         <h1>{word.question}</h1>\n    //         <p>{word.answer}</p>\n    //       </div>\n    //   );\n    return (\n\n    <div key={words.indexOf(word)}>\n       <div className=\"app\" key={word.question} onClick={ toggleAnswer }> \n         <h1>{word.question}</h1>\n       </div>\n        {showDiv && \n        <div className=\"app\" key={word.answer}>\n           <p>Conditionally render div here</p>\n           {word.answer}\n        </div>}\n    \n    </div>\n\n    )\n  }\n\n\n     // <h1> word.question </h1>\n       \n        // {showDiv && \n        // <div className=\"app\">\n        //     <p>Conditionally render div here</p>\n        //     {word.answer}\n        // </div>}\n        // <Button onClick={toggleAnswer} >{ !showDiv ? 'Show Answer' : 'Hide Answer' }</Button>\n\n  );\n\n  return (\n    // <>\n    //   <div className=\"app\">\n    //     <h1>Hi there!</h1>\n    //   </div>\n    //   {showDiv && \n    //     <div className=\"app\">\n    //       <p>Conditionally render div here</p>\n    //     </div>}\n    //   <Button onClick={toggleAnswer} >{ !showDiv ? 'Show Answer' : 'Hide Answer' }</Button>\n    // </>\n    <div>\n     <div>{cardWordGroup}</div>\n     <Button onClick={toggleAnswer}>{ !showDiv ? 'Show Answer' : 'Hide Answer' }</Button>\n    </div>\n  );\n}\n\nexport default CardGroup;"]},"metadata":{},"sourceType":"module"}