{"ast":null,"code":"var _jsxFileName = \"/Users/chughe88/Desktop/01-starting-setup/src/components/UI/CardGroup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from './Button/Button';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardGroup() {\n  _s();\n\n  const [showDiv, setShowDiv] = useState([{\n    question: 'Are',\n    answer: '1',\n    prevState: false\n  }, {\n    question: 'we',\n    answer: '2',\n    prevState: false\n  }, {\n    question: 'There',\n    answer: '3',\n    prevState: false\n  }, {\n    question: 'yet',\n    answer: '4',\n    prevState: false\n  }]);\n\n  const toggleAnswer = index => {\n    const newShowDiv = [...showDiv];\n    newShowDiv[index].prevState = !newShowDiv[index].prevState;\n    setShowDiv(newShowDiv);\n  };\n\n  const Card = _ref => {\n    let {\n      word,\n      index,\n      toggleAnswer\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        onClick: word => toggleAnswer,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: word.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, word.question, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), showDiv.prevState && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Conditionally render div here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), word.answer]\n      }, word.answer, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, showDiv.indexOf(word), true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }; //   const toggleAnswer = e => {\n  //     const { value } = e.target;\n  //     setShowDiv(prevState => ({\n  //         ...prevState,\n  //         value \n  //     }));\n  // };\n  //   const words = [\n  //       {\n  //         question: 'Are',\n  //         answer: '1',\n  //         prevState: false,\n  //         //toggleCard = ()=> setShowDiv(prevState => !prevState)\n  //         toggleCard: () => setShowDiv(prevState => !prevState)\n  //       },\n  //       {\n  //         question: 'we',\n  //         answer: '2',\n  //         prevState: false\n  //       },\n  //       {\n  //         question: 'There',\n  //         answer: '3',\n  //         prevState: false\n  //       },\n  //       {\n  //         question: 'yet',\n  //         answer: '4',\n  //         prevState: false\n  //       }\n  //   ]\n\n\n  const cardWordGroup = showDiv.map(word => {\n    //let rObj = {}\n    //rObj[word.question] = word.answer\n    //   return ( \n    //       <div>\n    //         <h1>{word.question}</h1>\n    //         <p>{word.answer}</p>\n    //       </div>\n    //   );\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        onClick: word => toggleAnswer,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: word.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 10\n        }, this)\n      }, word.question, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 8\n      }, this), showDiv.prevState && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Conditionally render div here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 12\n        }, this), word.answer]\n      }, word.answer, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, showDiv.indexOf(word), true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this);\n  } // <h1> word.question </h1>\n  // {showDiv && \n  // <div className=\"app\">\n  //     <p>Conditionally render div here</p>\n  //     {word.answer}\n  // </div>}\n  // <Button onClick={toggleAnswer} >{ !showDiv ? 'Show Answer' : 'Hide Answer' }</Button>\n  );\n  return (\n    /*#__PURE__*/\n    // <>\n    //   <div className=\"app\">\n    //     <h1>Hi there!</h1>\n    //   </div>\n    //   {showDiv && \n    //     <div className=\"app\">\n    //       <p>Conditionally render div here</p>\n    //     </div>}\n    //   <Button onClick={toggleAnswer} >{ !showDiv ? 'Show Answer' : 'Hide Answer' }</Button>\n    // </>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: cardWordGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleAnswer,\n        children: !showDiv ? 'Show Answer' : 'Hide Answer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(CardGroup, \"kpSghCAabb3e8LgpTPhQ+TAvTUw=\");\n\n_c = CardGroup;\nexport default CardGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardGroup\");","map":{"version":3,"sources":["/Users/chughe88/Desktop/01-starting-setup/src/components/UI/CardGroup.js"],"names":["React","useState","Button","CardGroup","showDiv","setShowDiv","question","answer","prevState","toggleAnswer","index","newShowDiv","Card","word","indexOf","cardWordGroup","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Button from './Button/Button';\n\nimport '../../App.css';\n\nfunction CardGroup() {\n  const [showDiv, setShowDiv] = useState([\n    {\n        question: 'Are',\n        answer: '1',\n        prevState: false,\n      },\n      {\n        question: 'we',\n        answer: '2',\n        prevState: false\n      },\n      {\n        question: 'There',\n        answer: '3',\n        prevState: false\n      },\n      {\n        question: 'yet',\n        answer: '4',\n        prevState: false\n      }\n\n  ]);\n\n  const toggleAnswer = (index) => {\n      const newShowDiv = [...showDiv];\n      newShowDiv[index].prevState = !newShowDiv[index].prevState;\n      setShowDiv(newShowDiv)\n  }\n\n  const Card = ( {word, index, toggleAnswer}) => {\n    return (\n        <div key={showDiv.indexOf(word)}>\n            <div className=\"app\" key={word.question} onClick= {(word) => toggleAnswer} > \n                <h1>{word.question}</h1>\n            </div>\n                {showDiv.prevState && \n            <div className=\"app\" key={word.answer}>\n                <p>Conditionally render div here</p>\n                {word.answer}\n            </div>}\n        </div>\n    )\n  }\n\n//   const toggleAnswer = e => {\n//     const { value } = e.target;\n//     setShowDiv(prevState => ({\n//         ...prevState,\n//         value \n//     }));\n// };\n  \n\n//   const words = [\n//       {\n//         question: 'Are',\n//         answer: '1',\n//         prevState: false,\n//         //toggleCard = ()=> setShowDiv(prevState => !prevState)\n//         toggleCard: () => setShowDiv(prevState => !prevState)\n//       },\n//       {\n//         question: 'we',\n//         answer: '2',\n//         prevState: false\n//       },\n//       {\n//         question: 'There',\n//         answer: '3',\n//         prevState: false\n//       },\n//       {\n//         question: 'yet',\n//         answer: '4',\n//         prevState: false\n//       }\n//   ]\n\n  const cardWordGroup = showDiv.map((word) => {\n      //let rObj = {}\n      //rObj[word.question] = word.answer\n    //   return ( \n    //       <div>\n    //         <h1>{word.question}</h1>\n    //         <p>{word.answer}</p>\n    //       </div>\n    //   );\n    return (\n\n    <div key={showDiv.indexOf(word)}>\n       <div className=\"app\" key={word.question} onClick= {(word) => toggleAnswer} > \n         <h1>{word.question}</h1>\n       </div>\n        {showDiv.prevState && \n        <div className=\"app\" key={word.answer}>\n           <p>Conditionally render div here</p>\n           {word.answer}\n        </div>}\n    \n    </div>\n\n    )\n  }\n\n\n     // <h1> word.question </h1>\n       \n        // {showDiv && \n        // <div className=\"app\">\n        //     <p>Conditionally render div here</p>\n        //     {word.answer}\n        // </div>}\n        // <Button onClick={toggleAnswer} >{ !showDiv ? 'Show Answer' : 'Hide Answer' }</Button>\n\n  );\n\n  return (\n    // <>\n    //   <div className=\"app\">\n    //     <h1>Hi there!</h1>\n    //   </div>\n    //   {showDiv && \n    //     <div className=\"app\">\n    //       <p>Conditionally render div here</p>\n    //     </div>}\n    //   <Button onClick={toggleAnswer} >{ !showDiv ? 'Show Answer' : 'Hide Answer' }</Button>\n    // </>\n    <div>\n     <div>{cardWordGroup}</div>\n     <Button onClick={toggleAnswer}>{ !showDiv ? 'Show Answer' : 'Hide Answer' }</Button>\n    </div>\n  );\n}\n\nexport default CardGroup;"]},"metadata":{},"sourceType":"module"}